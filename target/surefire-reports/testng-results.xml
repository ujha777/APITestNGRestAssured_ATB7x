<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-15T21:26:09 IST" name="Surefire suite" finished-at="2024-09-15T21:26:09 IST" duration-ms="183">
    <groups>
      <group name="qa">
        <method signature="TestNG004.test1()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" name="test1" class="thetestingacademy.sep05.testngexample.TestNG004"/>
        <method signature="TestNG004.test3()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" name="test3" class="thetestingacademy.sep05.testngexample.TestNG004"/>
      </group> <!-- qa -->
      <group name="init">
        <method signature="Testng002.initEnvironment()[pri:0, instance:thetestingacademy.sep05.TestNG.Testng002@f14a7d4]" name="initEnvironment" class="thetestingacademy.sep05.TestNG.Testng002"/>
        <method signature="Testng002.serverStartedOk()[pri:0, instance:thetestingacademy.sep05.TestNG.Testng002@f14a7d4]" name="serverStartedOk" class="thetestingacademy.sep05.TestNG.Testng002"/>
      </group> <!-- init -->
      <group name="regression">
        <method signature="TestNG004.test3()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" name="test3" class="thetestingacademy.sep05.testngexample.TestNG004"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="TestNG004.test1()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" name="test1" class="thetestingacademy.sep05.testngexample.TestNG004"/>
        <method signature="TestNG004.test2()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" name="test2" class="thetestingacademy.sep05.testngexample.TestNG004"/>
      </group> <!-- smoke -->
      <group name="preprod">
        <method signature="TestNG004.test2()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" name="test2" class="thetestingacademy.sep05.testngexample.TestNG004"/>
      </group> <!-- preprod -->
    </groups>
    <test started-at="2024-09-15T21:26:09 IST" name="Surefire test" finished-at="2024-09-15T21:26:09 IST" duration-ms="183">
      <class name="thetestingacademy.sep05.TestNG.Testng001">
        <test-method signature="serverStartedOk()[pri:0, instance:thetestingacademy.sep05.TestNG.Testng001@766653e6]" started-at="2024-09-15T21:26:09 IST" name="serverStartedOk" finished-at="2024-09-15T21:26:09 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serverStartedOk -->
        <test-method signature="method1()[pri:0, instance:thetestingacademy.sep05.TestNG.Testng001@766653e6]" started-at="2024-09-15T21:26:09 IST" name="method1" finished-at="2024-09-15T21:26:09 IST" depends-on-methods="thetestingacademy.sep05.TestNG.Testng001.serverStartedOk" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
      </class> <!-- thetestingacademy.sep05.TestNG.Testng001 -->
      <class name="thetestingacademy.sep05.testngexample.TestNG004">
        <test-method signature="test1()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" started-at="2024-09-15T21:26:09 IST" name="test1" finished-at="2024-09-15T21:26:09 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" started-at="2024-09-15T21:26:09 IST" name="test2" finished-at="2024-09-15T21:26:09 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test3()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG004@29a5f4e7]" started-at="2024-09-15T21:26:09 IST" name="test3" finished-at="2024-09-15T21:26:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- thetestingacademy.sep05.testngexample.TestNG004 -->
      <class name="thetestingacademy.sep05.TestNG.Testng002">
        <test-method signature="initEnvironment()[pri:0, instance:thetestingacademy.sep05.TestNG.Testng002@f14a7d4]" started-at="2024-09-15T21:26:09 IST" name="initEnvironment" finished-at="2024-09-15T21:26:09 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initEnvironment -->
        <test-method signature="serverStartedOk()[pri:0, instance:thetestingacademy.sep05.TestNG.Testng002@f14a7d4]" started-at="2024-09-15T21:26:09 IST" name="serverStartedOk" finished-at="2024-09-15T21:26:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serverStartedOk -->
        <test-method signature="method1()[pri:0, instance:thetestingacademy.sep05.TestNG.Testng002@f14a7d4]" started-at="2024-09-15T21:26:09 IST" name="method1" depends-on-groups="init.*" finished-at="2024-09-15T21:26:09 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
      </class> <!-- thetestingacademy.sep05.TestNG.Testng002 -->
      <class name="thetestingacademy.sep05.testngexample.TestNG003">
        <test-method signature="test1()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG003@52e7a6b2]" started-at="2024-09-15T21:26:09 IST" name="test1" finished-at="2024-09-15T21:26:09 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:thetestingacademy.sep05.testngexample.TestNG003@52e7a6b2]" started-at="2024-09-15T21:26:09 IST" name="test2" finished-at="2024-09-15T21:26:09 IST" duration-ms="12" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[failed expected [pramod] but found [pramodd]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: failed expected [pramod] but found [pramodd]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at thetestingacademy.sep05.testngexample.TestNG003.test2(TestNG003.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- thetestingacademy.sep05.testngexample.TestNG003 -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
